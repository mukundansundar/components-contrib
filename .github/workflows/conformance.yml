# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# ------------------------------------------------------------

name: conformance-tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  conformance:
    name: Run conformance tests
    runs-on: ubuntu-latest
    env:
      GOVER: 1.15
      GOOS: linux
      GOARCH: amd64
      GOPROXY: https://proxy.golang.org
      REDIS_VERSION: 6.0.9
    # strategy:
    # fail-fast: false # Keep running if one leg fails.
    # matrix:
    #   k8s-version:
    #   - v1.17.11
    #   - v1.18.8
    #   - v1.19.1
    #   mode:
    #   - ha
    #   - non-ha
    #   # Map between K8s and KinD versions.
    #   # This is attempting to make it a bit clearer what's being tested.
    #   # See: https://github.com/kubernetes-sigs/kind/releases/tag/v0.9.0
    #   include:
    #   - k8s-version: v1.17.11
    #     kind-version: v0.9.0
    #     kind-image-sha: sha256:5240a7a2c34bf241afb54ac05669f8a46661912eab05705d660971eeb12f6555
    #   - k8s-version: v1.18.8
    #     kind-version: v0.9.0
    #     kind-image-sha: sha256:f4bcc97a0ad6e7abaf3f643d890add7efe6ee4ab90baeb374b4f41a4c95567eb
    #   - k8s-version: v1.19.1
    #     kind-version: v0.9.0
    #     kind-image-sha: sha256:98cf5288864662e37115e362b23e4369c8c4a408f99cbc06e58ac30ddc721600
    #   exclude:
    #   - k8s-version: v1.17.11
    #     mode: non-ha
    #   - k8s-version: v1.18.8
    #     mode: non-ha
    steps:
    - name: Set up Go ${{ env.GOVER }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ env.GOVER }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    # - name: Configure KinD
    #   # Generate a KinD configuration file that uses:
    #   # (a) a couple of worker nodes: this is needed to run both
    #   #     ZooKeeper + Kakfa, and
    #   # (b) a local registry: Due to `kind load` performance
    #   #     https://github.com/kubernetes-sigs/kind/issues/1165, using
    #   #     a local repository speeds up the image pushes into KinD
    #   #     significantly.
    #   working-directory: ./
    #   run: |
    #     cat > kind.yaml <<EOF
    #     apiVersion: kind.x-k8s.io/v1alpha4
    #     kind: Cluster
    #     nodes:
    #     - role: control-plane
    #       image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
    #     - role: worker
    #       image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
    #     - role: worker
    #       image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
    #     - role: worker
    #       image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
    #     - role: worker
    #       image: kindest/node:${{ matrix.k8s-version }}@${{ matrix.kind-image-sha }}
    #     containerdConfigPatches:
    #     - |-
    #       [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:$REGISTRY_PORT"]
    #         endpoint = ["http://$REGISTRY_NAME:$REGISTRY_PORT"]
    #     EOF

    #     # Log the generated kind.yaml for easy reference.
    #     cat kind.yaml

    # - name: Create KinD Cluster
    #   uses: helm/kind-action@v1.0.0
    #   with:
    #     config: kind.yaml
    #     cluster_name: kind
    #     version: ${{ matrix.kind-version }}

    # - name: Create KinD secret
    #   run: |
    #     kubectl create secret 
    #     NODE_IP=$(kubectl get nodes \
    #               -lkubernetes.io/hostname!=kind-control-plane \
    #               -ojsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
    #     echo "MINIKUBE_NODE_IP=$NODE_IP" >> $GITHUB_ENV
    - name: Install Docker CE for buildx
      if: matrix.target_os == 'linux' && github.event_name != 'pull_request'
      run: |
        sudo apt update
        sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt update
        sudo apt install docker-ce
        docker -v
    - name: Install redis container
      run: docker run --name test-redis --restart always -d -p 6379:6379 redis:6.0.9-alpine
    - name: Run conformance tests
      run: make conf-tests

      